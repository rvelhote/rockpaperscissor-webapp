# Learn more about services, parameters and containers at
# http://symfony.com/doc/current/book/service_container.html
parameters:
#    parameter_name: value

services:
  app.game_engine:
    class: AppBundle\Service\GameEngine

  app.service.stats:
    class: AppBundle\Service\StatsService
    arguments: ['@app.repository.game', '@security.token_storage']

  app.service.game:
    class: AppBundle\Service\GameService
    arguments: ['@app.repository.game', '@doctrine.orm.entity_manager']

  app.service.gameset:
    class: AppBundle\Service\GameSetService
    arguments: ['@app.repository.gameset', '@doctrine.orm.entity_manager', '@security.token_storage']

  app.service.move_type:
    class: AppBundle\Service\MoveTypeService
    arguments: ['@app.repository.move_type']

  app.repository:
    class: Doctrine\ORM\EntityRepository
    factory: ['@doctrine.orm.entity_manager', getRepository]
    shared: false

  app.repository.game:
    parent: app.repository
    arguments: ['AppBundle:Game']

  app.repository.gameset:
    parent: app.repository
    arguments: ['AppBundle:GameSet']

  app.repository.player:
    parent: app.repository
    arguments: ['AppBundle:Player']

  app.repository.move_type:
    parent: app.repository
    arguments: ['AppBundle:MoveType']

  app.repository.result:
    parent: app.repository
    arguments: ['AppBundle:Result']

#  validator.full_gameplay_constraint:
#    class: AppBundle\Validator\Constraints\FullGameplayConstraintValidator
#    arguments: ['@app.repository.gameset', '@app.repository.game', '@app.repository.move_type', '@security.token_storage']
#    tags:
#      - { name: validator.constraint_validator }

  validator.gameset_exists_constraint:
    class: AppBundle\Validator\Constraints\GamesetExistsValidator
    arguments: ['@app.repository.gameset']
    tags:
      - { name: validator.constraint_validator }

  validator.gameset_owner_constraint:
    class: AppBundle\Validator\Constraints\GamesetOwnerValidator
    arguments: ['@app.repository.gameset', '@=service("security.token_storage").getToken().getUser()']
    tags:
      - { name: validator.constraint_validator }